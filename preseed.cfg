### Partman early command
### Kernel parameter
# d-i debian-installer/add-kernel-opts string net.ifnames=0 biosdevname=0
# d-i debconf/priority critical
# d-i debian-installer/add-kernel-opts string hostname=pve

#d-i debian-installer/add-kernel-opts string net.ifnames=0 biosdevname=0 console=ttyS0,19200n8


### Localization
d-i debian-installer/locale string en_US.UTF-8
d-i debian-installer/language string en
d-i debian-installer/country string TW
# d-i localechooser/supported-locales multiselect en_US.UTF-8

### Keyboard selection
d-i keyboard-configuration/xkb-keymap select us

###  Network configuration

# Netcfg choisira une interface connectée si possible. Cela empêchera
# # d'afficher une liste s'il y a plusieurs interfaces.
d-i netcfg/choose_interface select auto

# d-i netcfg/choose_interface select enp6s18
d-i netcfg/use_dhcp string false
#d-i netcfg/link_wait_timeout string 10
#d-i netcfg/dhcp_timeout string 60

d-i netcfg/disable_autoconfig boolean true

#d-i netcfg/dhcp_failed note
#d-i netcfg/dhcp_options select Configure network manually

#Configure network manually
# IPv4 Static network configuration
d-i netcfg/get_ipaddress string 192.168.0.220
d-i netcfg/get_netmask string 255.255.255.0
d-i netcfg/get_gateway string 192.168.0.1
d-i netcfg/get_nameservers string 192.168.0.1
d-i netcfg/confirm_static boolean true

# Set a hostname
#d-i netcfg/get_hostname string computer1
#d-i netcfg/get_domain string planet.mars
# Force a hostname
d-i netcfg/hostname string dockerbox

# d-i netcfg/get_hostname string computer1
d-i netcfg/get_hostname string unassignd-hostname
d-i netcfg/get_domain string unassigned-domain
d-i netcfg/get_hostname seen true
d-i netcfg/get_domain seen true

d-i netcfg/hostname string dockerbox

# Disable that annoying WEP key dialog
d-i netcfg/wireless_wep string


### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

### Account setup
# Skip creation of a normal user account
d-i passwd/make-user boolean false
# Set root password
# or encrypted using a crypt(3)  hash.
# d-i passwd/root-password-crypted password $6$kKKS0VaruQZZ1rZp$88dM4ZeBt/6wHKa1BHIoT3fBSq0B/PX.wW8IkzCc8Jwtzu9Qr3TqcRs638dNVnoPnZQh8pUVrRdaERYviH5NS0
#d-i passwd/root-password-crypted password $1$rCfMFNeP$O/sJi5BauIlajY4PIvl3G/
d-i passwd/root-password password root
d-i passwd/root-password-again password root

d-i passwd/user-default-groups string audio cdrom video wheel

### Clock and time zone set
# Set hardware clock to UTC
d-i clock-setup/utc boolean true
# Set timezone
d-i time/zone string Asia/Taipei
# Use NTP clock during installation
d-i clock-setup/ntp boolean true
d-i clock-setup/ntp-server string watch.stdtime.gov.tw

# d-i debian-installer/locale string en_US.UTF-8

### Partitioning

# d-i partman/early_command string /bin/dd if=/dev/zero of=/dev/vda bs=4K count=1 > /dev/null; /bin/dd if=/dev/zero of=/dev/nvme0n1 bs=4K count=1 > /dev/null
#d-i partman/early_command string /bin/dd if=/dev/zero of=/dev/vda bs=4K count=1 > /dev/null; /bin/dd if=/dev/zero of=/dev/sdb bs=4K count=1 > /dev/null

## Partitioning example
# If the system has free space you can choose to only partition that space.
# This is only honoured if partman-auto/method (below) is not set.
# d-i partman-auto/init_automatically_partition select biggest_free

# Alternatively, you may specify a disk to partition. If the system has only
# one disk the installer will default to using that, but otherwise the device
# name must be given in traditional, non-devfs format (so e.g. /dev/vda
# and not e.g. /dev/discs/disc0/disc).
# For example, to use the first SCSI/SATA hard disk:

# d-i partman-auto/disk string /dev/disk/by-id/nvme-BC511_NVMe_SK_hynix_256GB..............
# d-i partman-auto/disk string /dev/vda
# d-i partman-auto/disk string /dev/disk/by-id/ata-KINGSTON*
d-i partman-auto/disk string /dev/vda

# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition

d-i partman-auto/method string regular

# You can define the amount of space that will be used for the LVM volume
# group. It can either be a size with its unit (eg. 20 GB), a percentage of
# free space or the 'max' keyword.

#d-i partman-auto-lvm/guided_size string max
#d-i partman-auto-lvm/new_vg_name string dockerbox



# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions

d-i partman-auto/choose_recipe select atomic

# Or provide a recipe of your own...
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:

#d-i partman-auto/purge_lvm_from_device boolean true
#d-i partman-lvm/device_remove_lvm_span boolean true

# Standard Filesystem
#d-i partman/default_filesystem string ext4
#
#d-i partman-auto/choose_recipe select custom
#d-i partman-auto/expert_recipe string               \
#      custom ::                                     \
#                                268 268 268 fat32        \
#                                                $primary{ }         \
#                                                method{ efi }       \
#                                                format{ }           \
#                                . \
#                                537 537 537 ext2 \
#                                        $primary{ } \
#                                        bootable{ } \
#                                        method{ format } \
#                                        format{ } \
#                                        use_filesystem{ } \
#                                        filesystem{ ext2 } \
#                                        mountpoint{ /boot } \
#                                . \
#                                21475 21475 21475 ext4  \
#                                        $primary{ } \
#                                       $defaultignore{ }\
#                                        method{ lvm } \
#                                        device{ /dev/nvme0n1p3 } \
#                                        vg_name{ system } \
#                                .\
#                                4295 4295 4295 linux-swap \
#                                        $lvmok{ } \
#                                        in_vg{ system } \
#                                        lv_name{ swap } \
#                                        method{ swap } \
#                                        format{ } \
#                                .\
#                                1 1 21475 ext4 \
#                                        $lvmok{ } \
#                                        in_vg{ system } \
#                                        lv_name{ root } \
#                                        method{ format } \
#                                        format{ } \
#                                        use_filesystem{ } \
#                                        filesystem{ ext4 } \
#                                        label{ root } \
#                                        mountpoint{ / } \
#                                .\
#                                1 1 -1 ext4 \
#                                        $primary{ } \
#                                       $defaultignore{ }\
#                                        method{ lvm } \
#                                        device{ /dev/nvme0n1p4 } \
#                                        vg_name{ vmstorage } \
#                                .



d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Force UEFI booting ('BIOS compatibility' will be lost). Default: false.
d-i partman-efi/non_efi_system boolean true
# Ensure the partition table is GPT - this is required for EFI
d-i partman-partitioning/choose_label string gpt
d-i partman-partitioning/default_label string gpt

# When disk encryption is enabled, skip wiping the partitions beforehand.
#d-i partman-auto-crypto/erase_disks boolean false


### Apt setup
d-i apt-setup/cdrom/set-first boolean false
d-i apt-setup/cdrom/set-next boolean false
d-i apt-setup/cdrom/set-failed boolean false
d-i apt-setup/services-select multiselect security, updates
d-i apt-setup/security_host string security.debian.org

### Package selection
tasksel tasksel/first multiselect standard
# Individual additional packages to install
d-i pkgsel/include string openssh-server vim
d-i pkgsel/upgrade select full-upgrade
d-i pkgsel/update-policy select none
d-i pkgsel/updatedb boolean true
popularity-contest popularity-contest/participate boolean false


### GRUB STUFF
d-i grub-installer/only_debian boolean true
# d-i grub-installer/with_other_os boolean true
# d-i grub-installer/bootdev  string (hd0, 0)
d-i grub-installer/bootdev  string default
 
# Note: options passed to the installer will be added automatically.
#d-i debian-installer/add-kernel-opts string nousb

# Optional password for grub, either in clear text
# #d-i grub-installer/password password r00tme
# #d-i grub-installer/password-again password r00tme
# # or encrypted using an MD5 hash, see grub-md5-crypt(8).
# #d-i grub-installer/password-crypted password [MD5 hash]
#
# # Use the following option to add additional boot parameters for the
# # installed system (if supported by the bootloader installer).
# # Note: options passed to the installer will be added automatically.
# #d-i debian-installer/add-kernel-opts string nousb
#
# ### Finishing up the installation
# # Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

d-i debian-installer/exit/poweroff boolean true

#d-i preseed/late_command string in-target /bin/sh -c ' \
#    wget https://download.docker.com/linux/debian/gpg -O /etc/apt/keyrings/docker.asc; \
#    echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null; \
#    apt update; \
#    apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin; \
#    mkdir /etc/systemd/system/docker.service.d; \
    
d-i preseed/late_command string mkdir -p /target/etc/systemd/system/docker.service.d; \
 				in-target wget https://download.docker.com/linux/debian/gpg -O /etc/apt/keyrings/docker.asc; \
    				in-target /bin/bash -c 'echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null'; \
    				in-target apt update; \
    				in-target apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin; \
				cp /cdrom/configs/docker.service /target/etc/systemd/system/docker.service.d/override.conf; \
				cp /cdrom/configs/interfaces /target/etc/network/interfaces

# Add ansible to sudoer
# d-i preseed/late_command string echo 'ansible  ALL=(ALL:ALL) ALL' > /target/etc/sudoers.d/ansible_sudo

#d-i preseed/late_command string echo 'PermitRootLogin yes' >> /target/etc/ssh/sshd_config; \
#                                apt-install tftp-hpa; \
#                                in-target /usr/bin/tftp 192.168.0.254 -c get sethostname.sh /tmp/sethostname.sh ; \
#                                in-target /bin/bash /tmp/sethostname.sh

